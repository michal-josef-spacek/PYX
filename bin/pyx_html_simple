#!/usr/bin/env perl
# $Id: pyx_html_simple,v 1.18 2006-04-10 13:18:13 skim Exp $

# Pragmas.
use strict;
use warnings;

# Modules.
use PYX::Parser;

# Tags, that are simple.
our @tags = ('meta', 'link', 'br', 'hr', 'img', 'input', 'option');

# Debug.
our $debug = 0;

# Stack.
our @stack;

# Arguments.
if ($#ARGV < 0) {
	print "Usage: $0 [filename] [-]\n";
	print "\tfilename\tprocess on filename\n";
	print "\t-\t\tprocess on stdin\n";
	exit 1;
}

# PYX::Parser object.
my $pyx_parser = PYX::Parser->new(
	'start_tag' => \&_start_tag,
	'end_tag' => \&_end_tag,
	'data' => \&_data,
	'output_rewrite' => 1,
);

# Parse from stdin.
if ($ARGV[0] eq '-') {
	$pyx_parser->parse_handler(\*STDIN);

# Parse file.
} else {
	$pyx_parser->parse_file($ARGV[0]);
}

#------------------------------------------------------------------------------
sub _start_tag {
#------------------------------------------------------------------------------
# Process start tag.

	my $obj = shift;
	my $tag = shift;
	_single();
	print "push: " if $debug;	
	push @stack, $tag;
	print "$tag\n" if $debug;
	print $obj->{'line'}, "\n";
}

#------------------------------------------------------------------------------
sub _end_tag {
#------------------------------------------------------------------------------
# Process end tag.

	my $obj = shift;
	_single();
	print "pop: " if $debug;
	my $x = pop @stack;
	print "$x\n" if $debug;
	print $obj->{'line'}, "\n";
}

#------------------------------------------------------------------------------
sub _data {
#------------------------------------------------------------------------------
# Process data.

	my $obj = shift;
	_single();
	print $obj->{'line'}, "\n";
}

#------------------------------------------------------------------------------
sub _single {
#------------------------------------------------------------------------------
# Process end of single.

	my $tag = $stack[-1];
	if ($tag && grep(/^$tag$/, @tags)) {
		print ')'.$tag."\n";
		print "pop: " if $debug;
		my $x = pop @stack;
		print "$x\n" if $debug;
	}
}
