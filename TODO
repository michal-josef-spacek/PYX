$Id: TODO,v 1.23 2005-07-14 21:42:05 skim Exp $

TODO
====
3. Zkusit vymyslet implementaci parsovani pres HTML::TagReader. Viz pyx2.
4. Zkusit vymyslet implementaci parsovani pres XML::Parser. Viz puvodni pyx.
5. Zkusit vymyslet implementaci pres lame parsovani jako u stareho pyx.
7. Pokud bude komentar, tak umoznit jeho odstraneni. To by melo byt ve filterch.
8. Nejak promyslet PYX::Filter;
11. PYX.pm presunout do Tags::PYX.
21. Do PYX::Parser pridat parsovani souboru.
22. Do PYX::Parser pridat parsovani stringu primo funkci.
24. Pro PYX::Write::Tags::Code udelat dokumentaci.
25. Pridat kompatibilitu pro puvodni XML::PYX?.
26. Napsat PYX::Write::Tags2.
27.

Applied
=======
6. Opravit Makefile.PL tak, aby binarka sla do /usr/local adresare.
Tohle se delat takhle: perl Makefile.PL PREFIX=/usr/local/
NONE [20050618] skim

2. Udelat testy na PYX::Utils.
OK [20050622] skim

9. Implementace pyx2xml pres Tags.
OK [20050622] skim

10. Implementace pyx2xml pres lame vystup. Viz puvodni pyx2.
OK [20050622] skim

12. Pridat zpracovani komentaru.
OK [20050626] skim

1. Udelat testy na PYX.
OK [20050626] skim

13. Upravy v PYX::Parser. Mel by se predavat do handleru vlastni objekt? Jako u
    Expatu? Co s tim prepisovanim?
Predava se i objekt. Pridana funkce, na prime vykresleni vstupu na vystup. A
moznost prepisovat vstup na vystup automaticky.
OK [20050702] skim

16. V PYX::Write::Raw udelat vystup do output_handler.
OK [20050702] skim

14. Testy pro PYX::Write::Raw.
OK [20050702] skim

15. Testy pro PYX::Write::Tags.
OK [20050702] skim

17. V PYX::Write::Tags udelat vystup do output_handler.
OK [20050703] skim

19. Udelat moznost prepisovat na vystup jine nez zakladani tagy.
Pridan handler, ktery resi ostatni. Pokud neni definovan, tak vyhodi chybu.
OK [20050703] skim

18. Testy pro PYX::Parser.
OK [20050703] skim

20. Doplnit testy pro 19).
OK [20050703] skim

23. Pro PYX::Write::Tags::Code udelat testy.
OK [20050713] skim
